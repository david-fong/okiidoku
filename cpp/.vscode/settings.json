{
	// https://code.visualstudio.com/docs/cpp/faq-cpp

	"C_Cpp.intelliSenseCacheSize": 0,

	// "C_Cpp.default.cStandard": "c17",
	// "C_Cpp.default.cppStandard": "c++20",
	"C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
	"C_Cpp.default.browse.limitSymbolsToIncludedHeaders": true,

	// https://vector-of-bool.github.io/docs/vscode-cmake-tools/settings.html

	// I found it annoying.
	"cmake.configureOnOpen": false,
	"cmake.configureOnEdit": false,

	// prefer multi-config generators when available
	// TODO.wait the fallback seems to have broken in extension version 0.11.0. I've resorted to setting this per user-local-kit.
	// "cmake.preferredGenerators": ["Visual Studio 17 2022", "Ninja Multi-Config"],

	// If you don't have a build system with multi-config, you may want to append "/${buildType}" to the below.
	// TODO.wait https://github.com/microsoft/vscode-cmake-tools/issues/2426
	// TODO.try will the ${buildKitVendor} part have conflicts with MSVC for mingw-64 or cygwin?
	"cmake.buildDirectory": "${workspaceFolder}/build/${buildKitVendor}",

	"cmake.debugConfig": {
		"environment": [],
		// "cwd": "",
		"args": [],
		"setupCommands": [],
		"stopAtEntry": true,
		// "visualizerFile": "${workspaceFolder}/tools/debug.natvis",
	},

	"[cmake]": {
	},

	"files.exclude": {
		"external/": true,
		"build/": true,
		"extras/bindings/emscripten/external/": true,
		"extras/bindings/emscripten/build/": true,
	},

	"cSpell.enabledLanguageIds": [
		"c",
		"cpp",
		"json",
		"markdown",
		"plaintext",
		"python",
		"text",
		"yaml",
		"yml"
	],
	"cSpell.dictionaries": [
		"cpp"
	],
}