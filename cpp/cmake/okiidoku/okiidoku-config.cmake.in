# TODO I have no idea what the heck I'm doing and have not tested this
# set(OKIIDOKU_VERSION x.y.z)
cmake_minimum_required(VERSION 3.19) # TODO what best to set this to?
# ...
@PACKAGE_INIT@
# ...
# set_and_check(OKIIDOKU_INCLUDE_DIR "@PACKAGE_INSTALL_INCLUDEDIR@")
# set_and_check(OKIIDOKU_SYSCONFIG_DIR "@PACKAGE_INSTALL_SYSCONFIGDIR@")


# copied from https://alexreinking.com/blog/building-a-dual-shared-and-static-library-with-cmake.html#:~:text=Now%20we%27ll%20see%20the%20package%20config%20file

set(okiidoku_known_comps static shared)
set(okiidoku_comp_static NO)
set(okiidoku_comp_shared NO)
foreach(okiidoku_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
	if(okiidoku_comp IN_LIST okiidoku_known_comps)
		set(okiidoku_comp_${okiidoku_comp} YES)
	else()
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
			"okiidoku does not recognize component `${okiidoku_comp}`.")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
endforeach()

if(okiidoku_comp_static AND okiidoku_comp_shared)
	set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
		"okiidoku `static` and `shared` components are mutually exclusive.")
	set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
	return()
endif()

set(okiidoku_static_targets "${CMAKE_CURRENT_LIST_DIR}/okiidoku-static-targets.cmake")
set(okiidoku_shared_targets "${CMAKE_CURRENT_LIST_DIR}/okiidoku-shared-targets.cmake")

macro(okiidoku_load_targets type)
	if(NOT EXISTS "${okiidoku_${type}_targets}")
		set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
			"okiidoku `${type}` libraries were requested but not found.")
		set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
		return()
	endif()
	include("${okiidoku_${type}_targets}")
endmacro()

if(okiidoku_comp_static)
	okiidoku_load_targets(static)
elseif(okiidoku_comp_shared)
	okiidoku_load_targets(shared)
elseif(DEFINED okiidoku_SHARED_LIBS AND okiidoku_SHARED_LIBS)
	okiidoku_load_targets(shared)
elseif(DEFINED okiidoku_SHARED_LIBS AND NOT okiidoku_SHARED_LIBS)
	okiidoku_load_targets(static)
elseif(BUILD_SHARED_LIBS)
	if(EXISTS "${okiidoku_shared_targets}")
		okiidoku_load_targets(shared)
	else()
		okiidoku_load_targets(static)
	endif()
else()
	if(EXISTS "${okiidoku_static_targets}")
		okiidoku_load_targets(static)
	else()
		okiidoku_load_targets(shared)
	endif()
endif()


check_required_components(okiidoku)